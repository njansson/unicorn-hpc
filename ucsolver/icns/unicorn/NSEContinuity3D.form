# Copyright (c) 2005 Johan Hoffman 
# Licensed under the GNU GPL Version 2
#
# Modified by Anders Logg 2006
#
# First added:  2005
# Last changed: 2006-03-28
#
# The contiuity equation for the incompressible 
# Navier-Stokes equations using cG(1)cG(1)
#
# Compile this form with FFC: ffc NSEContinuity2D.form.

name = "NSEContinuity3D"
scalar = FiniteElement("Lagrange", "tetrahedron", 1)
vector = VectorElement("Lagrange", "tetrahedron", 1)
constant_scalar = FiniteElement("Discontinuous Lagrange", "tetrahedron", 0)
cell = "tetrahedron"
K1 = VectorElement("Lagrange", cell, 1)
# Dimension of domain
d = K1.cell_dimension()

q  = TestFunction(scalar)  # test basis function
P  = TrialFunction(scalar) # trial basis function
uc = Function(vector)      # linearized velocity

delta1 = Function(constant_scalar) # stabilization parameter

i0 = Index() # index for tensor notation
i1 = Index() # index for tensor notation

def ugradu(u, v):
    return [dot(u, grad(v[i])) for i in range(d)]

# Bilinear and linear forms
a = delta1*dot(grad(q), grad(P))*dx + 0.001*P*q*dx
#L = - q*div(uc)*dx - delta1*dot(dot(uc,grad(uc)),grad(q))
L = - q*div(uc)*dx - mult(delta1, dot( ugradu(uc, uc), grad(q))) *dx



