AM_CPPFLAGS = -I@srcdir@/unicorn
nobase_include_HEADERS = unicorn/AdaptiveRefinementProjectScalar.h unicorn/AdaptiveRefinementProjectVector.h unicorn/AdaptiveRefinement.h unicorn/ErrorEstimate.h  unicorn/init.h  unicorn/NodeNormal.h unicorn/SlipBC.h unicorn/MeshBC.h unicorn/NewSlipBC.h unicorn/NewDirichletBC.h unicorn/SpaceTimeFunction.h  unicorn/TimeDependentPDE.h unicorn/UniParameters.h unicorn/Project.h unicorn/EquiAffineMap.h unicorn/MeshQuality.h unicorn/util.h unicorn/DataSetSampler.h unicorn/ElasticSmoother.h unicorn/Projection2D.h  unicorn/Projection3D.h unicorn/Laplacian2D.h unicorn/Laplacian3D.h unicorn/LaplacianSmoother.h unicorn/unicorn_config.h

EXTRA_DIST = unicorn/AdaptiveRefinementProjectScalar.h unicorn/AdaptiveRefinementProjectVector.h unicorn/AdaptiveRefinement.h unicorn/ErrorEstimate.h unicorn/init.h unicorn/NodeNormal.h unicorn/SlipBC.h unicorn/MeshBC.h unicorn/NewSlipBC.h unicorn/NewDirichletBC.h unicorn/SpaceTimeFunction.h unicorn/TimeDependentPDE.h unicorn/UniParameters.h unicorn/Project.h unicorn/EquiAffineMap.h unicorn/MeshQuality.h unicorn/util.h unicorn/DataSetSampler.h unicorn/ElasticSmoother.h unicorn/Projection2D.h  unicorn/Projection3D.h unicorn/Elasticity2D.h unicorn/Elasticity3D.h unicorn/ElasticityStress3D.h unicorn/ElasticityJac3D.h unicorn/ElasticityJac2D.h unicorn/ElasticityStress2D.h unicorn/Laplacian2D.h unicorn/Laplacian3D.h unicorn/LaplacianSmoother.h unicorn/unicorn_config.h

lib_LTLIBRARIES = libunicorn.la
libunicorn_la_SOURCES = AdaptiveRefinementProjectScalar.cpp AdaptiveRefinementProjectVector.cpp AdaptiveRefinement.cpp UniParameters.cpp NodeNormal.cpp SpaceTimeFunction.cpp ErrorEstimate.cpp SlipBC.cpp MeshBC.cpp init.cpp util.cpp NewSlipBC.cpp NewDirichletBC.cpp Project.cpp TimeDependentPDE.cpp EquiAffineMap.cpp MeshQuality.cpp DataSetSampler.cpp Projection2D.cpp  Projection3D.cpp Elasticity2D.cpp  ElasticityJac2D.cpp  ElasticityStress2D.cpp Elasticity3D.cpp  ElasticityJac3D.cpp  ElasticityStress3D.cpp ElasticSmoother.cpp Laplacian2D.cpp Laplacian3D.cpp LaplacianSmoother.cpp


